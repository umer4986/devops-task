name: Build, Lint, and Push to ECR

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Debug runner environment
      run: |
        echo "Runner OS: $RUNNER_OS"
        echo "GitHub API Status: $(curl -s -o /dev/null -w '%{http_code}' https://api.github.com)"
        echo "Setup Python URL Status: $(curl -s -o /dev/null -w '%{http_code}' https://api.github.com/repos/actions/setup-python/tarball/a26af69be951a213d495a4c3e4e4022e16d87065)"
        git --version

    - name: Checkout repo
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4 SHA

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5 SHA
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install -r python-app/requirements.txt

    - name: Install flake8
      run: pip install flake8

    - name: Verify flake8 installation
      run: flake8 --version

    - name: Lint Python code
      run: flake8 python-app/

    - name: Run tests
      run: pytest python-app/tests/

    - name: Cache Docker layers
      uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccbccc # v4 SHA
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@4f6186a56b978a006e6063bd4a7b62d4206b9d68 # v3 SHA
      with:
        install: true

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4 SHA
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@062b8cb44cc8de7b43a6d11e0eb281753d4a7b72 # v2 SHA

    - name: Build and Push Docker image to ECR
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker buildx build \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          python-app/ --push

    - name: Scan Docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
        format: table
        exit-code: '1'
        severity: CRITICAL,HIGH
