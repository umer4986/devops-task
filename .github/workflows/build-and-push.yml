name: CI/CD for Flask App

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-central-1
      ECR_REPOSITORY: dev-flask-crud-repo

    steps:
    - name: Checkout repo
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4 SHA

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5 SHA
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r python-app/requirements.txt

    - name: Lint Python code
      run: flake8 python-app/

    - name: Run tests
      run: pytest python-app/tests/

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4 SHA
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

    - name: Build, tag, and push Docker image
      run: |
        IMAGE_URI=${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        docker build -t $IMAGE_URI python-app/
        docker push $IMAGE_URI
